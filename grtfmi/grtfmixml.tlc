%% Starting generation of modelDescription.xml
%openfile xmlfile = "modelDescription.xml"
%openfile incfile = "fmiwrapper.inc"
%with CompiledModel
  %assign reusableFunction = ISFIELD(ConfigSet, "CodeInterfacePackaging") && ConfigSet.CodeInterfacePackaging == "Reusable function"
  %selectfile STDOUT
### Writing modelDescription.xml

  %selectfile xmlfile
<?xml version="1.0" encoding="UTF-8"?>
<fmiModelDescription
  %if FMIVersion == "2"
  fmiVersion="2.0"
  guid="%<GUID>" 
  %else
  fmiVersion="3.0-alpha.2"
  instantiationToken="%<GUID>" 
  %endif
  modelName="%<OrigName>"
  generationTool="Simulink %<Version> with FMI Kit 2.6 (grtfmi.tlc, %<Solver>, %<FundamentalStepSize> s)"
  %assign XMLdate = FEVAL("grtfmi_xml_datetime")
  generationDateAndTime="%<XMLdate>"
  %assign description = FEVAL("get_param", "%<OrigName>", "Description")
  %if !ISEMPTY(description)
  description="%<description>"
  %endif
  %if !ISEMPTY(ModelAuthor)
  author="%<ModelAuthor>"
  %endif
  version="%<ModelVersion>"
  numberOfEventIndicators="%<ZCVectorlength>">
  
  <CoSimulation
    modelIdentifier="%<OrigName>"
  %if !reusableFunction
    canBeInstantiatedOnlyOncePerProcess="true"
  %endif
    canHandleVariableCommunicationStepSize="true">
  %if SourceCodeFMU
    %assign simscapeBlocks = FEVAL("find_system", modelName, "BlockType", "SimscapeBlock")
    %if ISEMPTY(simscapeBlocks)
      %assign sourceFiles = []
    %else
      %assign sourceFiles = FEVAL("grtfmi_simscape_sources")
    %endif
    %assign modelSources = FEVAL("grtfmi_model_sources", modelName, RTWGenSettings.RelativeBuildDir)
    %assign modelSources = modelSources[1]
    %foreach i = SIZE(modelSources, 1)
      %assign sourceFiles = sourceFiles + modelSources[i]
    %endforeach
    %if FMIVersion == "2"
    <SourceFiles>
      <File name="fmi2Functions.c"/>
      %foreach i = SIZE(sourceFiles, 1)
        %assign sourceFile = FEVAL("grtfmi_filename", sourceFiles[i])
      <File name="%<sourceFile>"/>
      %endforeach
    </SourceFiles>
    %else
    <BuildConfiguration>
      <SourceFileSet>
        <SourceFile name="fmi3Functions.c"/>
      %foreach i = SIZE(sourceFiles, 1)
        <SourceFile name="%<sourceFiles[i]>"/>
      %endforeach
      </SourceFileSet>
    </BuildConfiguration>
    %endif
  %endif
  </CoSimulation>
  %if ISFIELD(CompiledModel, "Units") && Units.NumUnits > 1
  
  <UnitDefinitions>
    %foreach unitIdx = Units.NumUnits
      %assign unitExpr = Units.Unit[unitIdx].ASCIIEscapedUnitExpr
      %if !ISEMPTY(unitExpr)
    <Unit name="%<unitExpr>"/>
      %endif
    %endforeach
  </UnitDefinitions>
  %endif

  <DefaultExperiment
    startTime="%<StartTime>"
  %if "%<StopTime>" != "rtInf"
    stopTime="%<StopTime>"
  %endif
    stepSize="%<FixedStepOpts.FixedStep>"/>

  <ModelVariables>
  %assign vr = 1
  %assign outputIndices = []
  %selectfile incfile
#include "%<OrigName>.h"
#include "%<OrigName>_private.h"

typedef struct {
	BuiltInDTypeId dtypeID;
	size_t size;
	void* address;
} ModelVariable;

#ifndef NO_FMI_FUNCTION_PREFIX
  %if FMIVersion == "2"
#define FMI2_FUNCTION_PREFIX %<OrigName>_
  %else
#define FMI3_FUNCTION_PREFIX %<OrigName>_
  %endif
#endif

#define MODEL_GUID       "%<GUID>"
#define MODEL            %<OrigName>
#define MODEL_INITIALIZE %<OrigName>_initialize
#define MODEL_STEP       %<OrigName>_step
#define MODEL_TERMINATE  %<OrigName>_terminate
#define RT_MDL_TYPE      %<tSimStructType>
#define STEP_SIZE        %<FixedStepOpts.FixedStep>
  %if Solver == "FixedStepDiscrete"
#define DISCRETE
  %endif

/* R2019a defines the block parameters as extern */
#ifndef rtmGetDefaultParam
#define rtmGetDefaultParam(S) (&%<OrigName>_P)
#endif

%if reusableFunction
#define REUSABLE_FUNCTION
%else
/* Definitions for non-reusable models */
#define RT_MDL_INSTANCE     %<tSimStruct>
#define rtmGetU(S)          (&%<tInput>)
#define rtmGetY(S)          (&%<tOutput>)
%endif

static void initializeModelVariables(RT_MDL_TYPE* S, ModelVariable modelVariables[]) {
  %% Parameters
  %selectfile xmlfile

  <!-- Parameters -->
  %with ModelParameters
    %foreach paramid = NumParameters
      %assign param = Parameter[paramid]
      %if ConfigSet.InlineParams && (!ISFIELD(param, "Tunable") || param.Tunable != "yes")
        %continue
      %endif
      %if FEVAL("grtfmi_exclude_variable", "%<param.Identifier>", "%<VisibleParameters>")
        %continue
      %endif
      %if FMIVersion == "2"
        %assign vr = OutputParameterFMI2(param, vr)
      %else
        %assign vr = OutputParameterFMI3(param, vr)
      %endif
    %endforeach
  %endwith
  %selectfile xmlfile
  %% Inputs
  %with ExternalInputs
    %if NumExternalInputs > 0
      %selectfile xmlfile

    <!-- Inputs -->
      %foreach portid = NumExternalInputs
        %assign port = ExternalInput[portid]
        %if FMIVersion == "2"
          %assign vr = ExternalInputFMI2(port, vr)
        %else
          %assign vr = ExternalInputFMI3(port, vr)
        %endif
      %endforeach
    %endif
  %endwith
  %% Outputs
  %with ExternalOutputs
    %if NumExternalOutputs > 0
      %selectfile xmlfile

    <!-- Outputs -->
      %foreach portid = NumExternalOutputs
        %assign outp = ExternalOutput[portid]
        %if FMIVersion == "2"
          %assign nextVR = ExternalOutputFMI2(outp, vr)   
        %else
          %assign nextVR = ExternalOutputFMI3(outp, vr)
        %endif
        %foreach vrIdx = nextVR - vr
          %assign outputIndices = outputIndices + (vr + vrIdx)
        %endforeach
        %assign vr = nextVR
      %endforeach
    %endif
  %endwith
  %selectfile incfile
}

#define N_MODEL_VARIABLES %<vr>
  %selectfile xmlfile

  </ModelVariables>

  <ModelStructure>
  %if SIZE(outputIndices, 1) > 0
    %if FMIVersion == "2"
    <Outputs>
      %foreach iOutputIndex = SIZE(outputIndices, 1)
      <Unknown index="%<outputIndices[iOutputIndex]>"/>
      %endforeach
    </Outputs>
    %else
      %foreach iOutputIndex = SIZE(outputIndices, 1)
    <Output valueReference="%<outputIndices[iOutputIndex]>"/>
      %endforeach
    %endif
  %endif
  </ModelStructure>

</fmiModelDescription>
%endwith

%closefile incfile
%closefile xmlfile
