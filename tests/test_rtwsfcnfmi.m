me = true;

models = {
  {'f14',            '1e-2', '60', 'alpharad'}, ...
  {'sldemo_bounce',  '1e-2', '25', 'ContinuousStates.Position[1]'}, ...
  {'sldemo_clutch',  '1e-2', '10', 'w'}, ...
  {'sldemo_engine',  '1e-3', '10', 'crankspeedradsec'}, ...
  {'sldemo_fuelsys', '1e-2', '10', 'ContinuousStates.StateSpace_CSTATE'}, ...
};

figure

for i = 1:numel(models)
  
    model      = models{i}{1};
    fixed_step = models{i}{2};
    stop_time  = models{i}{3};
    outputs    = models{i}{4};
    
    if exist(model) ~= 4
        continue
    end
    
    if me
        rtwsfcnfmi_export_model(model, ...
          'SolverType', 'Variable-step', ...
          'CMakeGenerator', 'Visual Studio 15 2017 Win64');
    else
        rtwsfcnfmi_export_model(model, ...
          'SolverType', 'Fixed-step', ...
          'FixedStep', fixed_step, ...
          'FMIType', 'CoSimulation', ...
          'CMakeGenerator', 'Visual Studio 15 2017 Win64');
    end
    
    system(['python -m fmpy' ...
      ' --stop-time ' stop_time ...
      ' --output-variables ' outputs ...
      ' --output-file ' model '_out.csv ' ...
      'simulate ' model '.fmu']);
    m = csvread([model '_out.csv'], 1);
    subplot(numel(models), 1, i);
    plot(m(:,1), m(:,2:end));
    ylabel(model, 'Interpreter', 'none');
    
end
