#  rtwsfcnfmi_vcx64.tmf
#
#  Template makefile for building RTW-generated S-functions with FMI
#  using Visual C compilers (64-bit).
#
#  Customized from rtwsfcn_vcx64.tmf in the Matlab distribution.
#

#
#     This template is automatically customized by the Real-Time
#     Workshop build procedure to create "<model>.mk"
#
#     The following defines can be used to modify the behavior of the
#     build:
#
#       OPT_OPTS       - Optimization option. Specify OPT_OPTS=-g to
#                        create a mex file for debugging.
#       MEX_OPTS       - User specific mex options.
#       USER_SRCS      - Additional user sources, such as files needed by
#                        S-functions.
#       USER_INCLUDES  - Additional include paths
#                        (i.e. USER_INCLUDES="-Iwhere-ever -Iwhere-ever2")
#
#     This template makefile is designed to be used with a system target
#     file that contains 'rtwgensettings.BuildDirSuffix' see rtwsfcn.tlc

#------------------------ Macros read by make_rtw -----------------------------
#
# The following macros are read by the Real-Time Workshop build procedure:
#
#  MAKECMD         - This is the command used to invoke the make utility
#  HOST            - What platform this template makefile is targeted for
#                    (i.e. PC or UNIX)
#  BUILD           - Invoke make from the Real-Time Workshop build procedure
#                    (yes/no)?
#  SYS_TARGET_FILE - Name of system target file.

MAKECMD         = nmake
HOST            = PC
BUILD           = yes
SYS_TARGET_FILE = rtwsfcnfmi.tlc
COMPILER_TOOL_CHAIN = vcx64

#---------------------- Tokens expanded by make_rtw ---------------------------
#
# The following tokens, when wrapped with "|>" and "<|" are expanded by the
# Real-Time Workshop build procedure.
#
#  MODEL_NAME      - Name of the Simulink block diagram
#  MODEL_MODULES   - Any additional generated source modules
#  MAKEFILE_NAME   - Name of makefile created from template makefile <model>.mk
#  MATLAB_ROOT     - Path to were MATLAB is installed.
#  MATLAB_BIN      - Path to MATLAB executable.
#  S_FUNCTIONS     - List of S-functions.
#  S_FUNCTIONS_LIB - List of S-functions libraries to link.
#  SOLVER          - Solver source file name
#  NUMST           - Number of sample times
#  TID01EQ         - yes (1) or no (0): Are sampling rates of continuous task
#                    (tid=0) and 1st discrete task equal.
#  NCSTATES        - Number of continuous states
#  MEXEXT          - extension that a mex file has. See the MATLAB mexext 
#                    command
#  BUILDARGS       - Options passed in at the command line.
#  CREATEMODEL     - 1 will cause a untitled model to be opened with the
#                    generated s-function block inside it.
#  USERMODULES     - passed along for later code generations of models that
#                    contain this RTW S-Function. (Used by RTW S-Function block.)
#  USEPARAMVALUES  - 1 will cause the generated S-function block to have values
#                    instead of variable names.
#  MEX_OPT_FILE    - mex option file name
#  VISUAL_VER      - Visual C++ version information

MODEL           = |>MODEL_NAME<|
MODULES         = |>MODEL_MODULES<|
MAKEFILE        = |>MAKEFILE_NAME<|
MATLAB_ROOT     = |>MATLAB_ROOT<|
ALT_MATLAB_ROOT = |>ALT_MATLAB_ROOT<|
MATLAB_BIN      = |>MATLAB_BIN<|
ALT_MATLAB_BIN  = |>ALT_MATLAB_BIN<|
S_FUNCTIONS     = |>S_FUNCTIONS<|
S_FUNCTIONS_LIB = |>S_FUNCTIONS_LIB<|
SOLVER          = |>SOLVER<|
NUMST           = |>NUMST<|
TID01EQ         = |>TID01EQ<|
NCSTATES        = |>NCSTATES<|
MEM_ALLOC       = |>MEM_ALLOC<|
MEXEXT          = |>MEXEXT<|
BUILDARGS       = |>BUILDARGS<|
CREATEMODEL     = |>CREATEMODEL<|
USERMODULES     = |>USERMODULES<|
USEPARAMVALUES  = |>USEPARAMVALUES<|
MEX_OPT_FILE    = |>MEX_OPT_FILE<|
COMPUTER        = |>COMPUTER<|
VISUAL_VER      = |>VISUAL_VER<|
OPTIMIZATION_FLAGS = |>OPTIMIZATION_FLAGS<|
FMI_VER         = |>FMI_VER<|
FMI_TYPE        = |>FMI_TYPE<|
FMI_LOAD_MEX    = |>FMI_LOAD_MEX<|
FMI_USER_SRCS   = |>FMI_USER_SRCS<|
FMI_OPT_OPTS    = |>FMI_OPT_OPTS<|

!if "$(MATLAB_ROOT)" != "$(ALT_MATLAB_ROOT)"
MATLAB_ROOT = $(ALT_MATLAB_ROOT)
!endif
!if "$(MATLAB_BIN)" != "$(ALT_MATLAB_BIN)"
MATLAB_BIN = $(ALT_MATLAB_BIN)
!endif

#--------------------------- Tool Specifications ------------------------------

CPU = AMD64
!include $(MATLAB_ROOT)\rtw\c\tools\vctools.mak
APPVER = 5.02

MEX    = $(MATLAB_BIN)\mex
CC     = $(MATLAB_BIN)\mex -c
CPP    = $(MATLAB_BIN)\mex -c
LIBCMD = lib
PERL   = $(MATLAB_ROOT)\sys\perl\win32\bin\perl

#------------------------------ Include/Lib Path ------------------------------
MATLAB_INCLUDES =                    $(MATLAB_ROOT)\simulink\include
MATLAB_INCLUDES = $(MATLAB_INCLUDES);$(MATLAB_ROOT)\extern\include
MATLAB_INCLUDES = $(MATLAB_INCLUDES);$(MATLAB_ROOT)\rtw\c\src

# Additional file include paths
|>START_EXPAND_INCLUDES<|
MATLAB_INCLUDES = $(MATLAB_INCLUDES);|>EXPAND_DIR_NAME<||>END_EXPAND_INCLUDES<|

INCLUDE = .;..;$(MATLAB_INCLUDES);$(INCLUDE)                

#------------------------ C and MEX optimization options ----------------------

DEFAULT_OPT_OPTS = -O

MEX_OPTS = 
OPT_OPTS = $(DEFAULT_OPT_OPTS)

!if "$(OPTIMIZATION_FLAGS)" != ""
MEX_OPT_OPTS = OPTIMFLAGS="$(OPTIMIZATION_FLAGS) /MD"    # passed to 'mex -c'
!else
MEX_OPT_OPTS = $(OPT_OPTS)    # passed to 'mex -c'
!endif


!if "$(MEX_OPTS)" == "-g"
MEX_OPT_OPTS =
!endif

#-------------------------------- Mex Options  --------------------------------

MEX_FLAGS = $(MEX_ARCH) $(MEX_OPTS) $(MEX_OPT_OPTS) $(MEX_OPT_FILE) 

#----------------------------- Source Files -----------------------------------
USER_SRCS =


SRCS = $(MODULES) $(USER_SRCS)

OBJS_CPP_UPPER = $(SRCS:.CPP=.obj)
OBJS_CPP_LOWER = $(OBJS_CPP_UPPER:.cpp=.obj)
OBJS_C_UPPER = $(OBJS_CPP_LOWER:.C=.obj)
OBJS_C_LOWER = $(OBJS_C_UPPER:.c=.obj)
OBJS = $(MODEL)_sf.obj $(OBJS_C_LOWER)

#-------------------------- Additional Libraries ------------------------------

LIBS = 
|>START_PRECOMP_LIBRARIES<|
!if "$(OPT_OPTS)" == "$(DEFAULT_OPT_OPTS)"
LIBS = $(LIBS) |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_rtwsfcn_vcx64.lib
!else
LIBS = $(LIBS) |>EXPAND_LIBRARY_NAME<|.lib
!endif
|>END_PRECOMP_LIBRARIES<|
|>START_EXPAND_LIBRARIES<|
LIBS = $(LIBS) |>EXPAND_LIBRARY_NAME<|.lib |>END_EXPAND_LIBRARIES<|

LIBUT    = $(MATLAB_ROOT)\extern\lib\win64\microsoft\libut.lib
LIBFIXPT = $(MATLAB_ROOT)\extern\lib\win64\microsoft\libfixedpoint.lib
LIBS     = $(LIBS) $(LIBUT) $(LIBFIXPT)

CMD_FILE = $(MODEL).lnk
GEN_LNK_SCRIPT = $(MATLAB_ROOT)\rtw\c\tools\mkvc_lnk.pl

#------------------------------ FMI Settings ----------------------------------

!if "$(FMI_VER)" == "1.0"
FMI_PREFIX = fmi1
!else
FMI_PREFIX = fmi2
!endif

!if "$(FMI_TYPE)" == "CoSimulation"
FMI_MODULE       = $(FMI_PREFIX)Functions
!if "$(SOLVER)" == ""   #-- discrete (no continuous states)
FMI_SOLVER_SRC = $(MATLAB_ROOT)\rtw\c\src\ode1.c    #-- For linking with generic FMI implementation
FMI_SOLVER_OBJ = ode1.obj
!else
FMI_SOLVER_SRC = $(MATLAB_ROOT)\rtw\c\src\$(SOLVER)
FMI_SOLVER_OBJ = $(SOLVER:.c=.obj)
!endif
!if "$(SOLVER)" == "ode14x.c"
FMI_SOLVER_OBJ = $(FMI_SOLVER_OBJ) rt_backsubrr_dbl.obj rt_forwardsubrr_dbl.obj rt_lu_real.obj
!endif
!else
FMI_MODULE       = $(FMI_PREFIX)ModelFunctions
FMI_SOLVER_SRC = $(MATLAB_ROOT)\rtw\c\src\ode1.c    #-- For linking with generic FMI implementation
FMI_SOLVER_OBJ = ode1.obj
!endif

FMI_SRC = $(SFCN_FMI_ROOT)\c\$(FMI_MODULE).c
FMI_SRC2 = $(SFCN_FMI_ROOT)\c\$(FMI_PREFIX).c
FMI_SRC3 = $(SFCN_FMI_ROOT)\c\rtPrintfNoOp_cpp.cpp
FMI_OBJ = $(FMI_MODULE).obj
FMI_OBJ2 = $(FMI_PREFIX).obj
FMI_OBJ3 = rtPrintfNoOp_cpp.obj

!if "$(FMI_LOAD_MEX)" == "1"
FMI_SFCN_SRCS =
!else
FMI_SFCN_SRCS = $(S_FUNCTIONS) $(FMI_USER_SRCS)
!endif

!if "$(FMI_SFCN_SRCS)" != ""
FMI_RT_OBJS = rt_matrx.obj
!else
FMI_RT_OBJS =
!endif

FMI_SFCN_OBJS_CPP_UPPER = $(FMI_SFCN_SRCS:.CPP=.obj)
FMI_SFCN_OBJS_CPP_LOWER = $(FMI_SFCN_OBJS_CPP_UPPER:.cpp=.obj)
FMI_SFCN_OBJS_C_UPPER = $(FMI_SFCN_OBJS_CPP_LOWER:.C=.obj)
FMI_SFCN_OBJS_C_LOWER = $(FMI_SFCN_OBJS_C_UPPER:.c=.obj)

FMI_OBJS = $(MODEL)_sf.obj $(FMI_OBJ2) $(FMI_OBJ3) $(FMI_SOLVER_OBJ) $(FMI_SFCN_OBJS_C_LOWER) $(FMI_RT_OBJS) $(OBJS_C_LOWER)

# To invoke special rule for compilation of S-function sources
FMI_SFCN_DUMMIES_CPP_UPPER = $(FMI_SFCN_SRCS:.CPP=.dum)
FMI_SFCN_DUMMIES_CPP_LOWER = $(FMI_SFCN_DUMMIES_CPP_UPPER:.cpp=.dum)
FMI_SFCN_DUMMIES_C_UPPER = $(FMI_SFCN_DUMMIES_CPP_LOWER:.C=.dum)
FMI_SFCN_DUMMIES = $(FMI_SFCN_DUMMIES_C_UPPER:.c=.dum)

FMI_CC = cl 

FMI_CC_FLAGS = /c /Zp8 /GR /W3 /EHs /DWIN64 /D_CRT_SECURE_NO_DEPRECATE /D_SCL_SECURE_NO_DEPRECATE /D_SECURE_SCL=0 /nologo /MD $(FMI_OPT_OPTS) /DNDEBUG

!if "$(FMI_LOAD_MEX)" == "1"
FMI_ROOT_SFCN_DEFINES  = /DMATLAB_MEX_FILE /DRT_MALLOC /DMEX_DOUBLE_HANDLE
!else
FMI_ROOT_SFCN_DEFINES  = /DFIPXT_SHARED_MODULE /Drt_matrx_h /DRT_MALLOC
!endif
FMI_CHILD_SFCN_DEFINES = /DNRT /DRT_MALLOC
FMI_SOLVER_DEFINES     = /DNRT /DRT_MALLOC

FMI_SOLVER_INCLUDE = $(MATLAB_ROOT)\rtw\c\src\matrixmath

FMI_EXT = dll
FMI_LD  = link
FMI_LD_CMD = /dll /MAP /LIBPATH:"$(MATLAB_ROOT)\extern\lib\win64\microsoft" libmx.lib libmex.lib libmat.lib $(FMI_OBJS) $(S_FUNCTIONS_LIB) $(LIBS) /implib:$(MODEL)_sf.lib /MACHINE:AMD64 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib
!if "$(VISUAL_VER)" == "14.0"
FMI_LD_CMD = $(FMI_LD_CMD) legacy_stdio_definitions.lib
!endif
!if "$(VISUAL_VER)" == "15.0"
FMI_LD_CMD = $(FMI_LD_CMD) legacy_stdio_definitions.lib
!endif
!if "$(VISUAL_VER)" != "9.0"
FMI_LD_CMD = $(FMI_LD_CMD) /manifest
!endif
!if "$(FMI_LOAD_MEX)" == "1"
FMI_LD_CMD = $(FMI_LD_CMD) /DELAYLOAD:libmx.dll /DELAYLOAD:libmex.dll /DELAYLOAD:libmat.dll /DELAYLOAD:libfixedpoint.dll /DELAYLOAD:libut.dll delayimp.lib /IGNORE:4199
!endif
FMI_LD_CMD = $(FMI_LD_CMD) /IGNORE:4042
FMI_MT  = mt -manifest $(MODEL)_sf.dll.manifest -outputresource:$(MODEL)_sf.dll;2
FMI_DEL = del $(MODEL)_sf.dll.manifest $(MODEL)_sf.exp $(MODEL)_sf.map inputs.tmp outputs.tmp params.tmp blockio.tmp dwork.tmp busio.tmp null.tmp dirfeedthrough.tmp *.obj
FMI_DIR = win64

FMI_LD_OUT = /OUT:"$(MODEL)_sf.$(FMI_EXT)" /NOLOGO

#--------------------------------- Rules --------------------------------------
all: set_environment_variables ..\$(MODEL)_sf.$(MEXEXT) $(MODEL)_sf.$(FMI_EXT)

..\$(MODEL)_sf.$(MEXEXT) : $(OBJS) $(LIBS)
	@cmd /C "echo ### Linking ..."
	$(PERL) $(GEN_LNK_SCRIPT) $(CMD_FILE) $(OBJS)
	$(MEX) $(MEX_FLAGS) @$(CMD_FILE) $(LIBS) $(S_FUNCTIONS_LIB) -outdir .. 
	@cmd /C "echo ### Created MEX-file $(MODEL)_sf.$(MEXEXT)"
    @if exist $(FMI_OBJ) del $(FMI_OBJ)

$(MODEL)_sf.$(FMI_EXT) : $(FMI_OBJ) $(FMI_SFCN_DUMMIES)
    @cmd /C "echo ### Creating FMU binary" $(MODEL)_sf.$(FMI_EXT)
	@if exist $(MODEL)_sf.obj del $(MODEL)_sf.obj
	@copy $(FMI_OBJ) $(MODEL)_sf.obj
    $(FMI_LD) $(FMI_LD_OUT) $(FMI_LD_CMD) 
    @$(FMI_MT)
    @$(FMI_DEL)
    @if exist FMUArchive rmdir /s /q FMUArchive
    @if exist binaries rmdir /s /q binaries
    @if exist ..\$(MODEL)_sf.fmu del ..\$(MODEL)_sf.fmu
    @mkdir FMUArchive
    @mkdir binaries
    @cd binaries
    @mkdir $(FMI_DIR)
    @cd ..
    @if exist $(MODEL)_sf.lib move $(MODEL)_sf.lib binaries\$(FMI_DIR)
    @if exist $(MODEL)_sf.dll move $(MODEL)_sf.dll binaries\$(FMI_DIR)
    @move binaries FMUArchive
    @if exist resources move resources FMUArchive
    @if exist modelDescription.xml move modelDescription.xml FMUArchive

# Look in simulink/src helper files

{$(MATLAB_ROOT)\simulink\src}.c.obj :
	@cmd /C "echo ### Compiling $<"
	$(CC) $(MEX_FLAGS) $<

{$(MATLAB_ROOT)\simulink\src}.cpp.obj :
	@cmd /C "echo ### Compiling $<"
	$(CPP) $(MEX_FLAGS) $<

# Additional sources

|>START_EXPAND_RULES<|{|>EXPAND_DIR_NAME<|}.c.obj :
	@cmd /C "echo ### Compiling $<"
	$(CC) $(MEX_FLAGS) $<

|>END_EXPAND_RULES<|

|>START_EXPAND_RULES<|{|>EXPAND_DIR_NAME<|}.cpp.obj :
	@cmd /C "echo ### Compiling $<"
	$(CPP) $(MEX_FLAGS) $<

|>END_EXPAND_RULES<|

# Put these rules last, otherwise nmake will check toolboxes first

{..}.c.obj :
	@cmd /C "echo ### Compiling $<"
	$(CC) $(MEX_FLAGS) $(USER_INCLUDES) $<

{..}.cpp.obj :
	@cmd /C "echo ### Compiling $<"
	$(CPP) $(MEX_FLAGS) $(USER_INCLUDES) $<

.c.obj :
	@cmd /C "echo ### Compiling $<"
	@if exist $*.pdb del $*.pdb
	@if exist ..\$(MODEL)_sf.pdb del ..\$(MODEL)_sf.pdb
	$(CC) $(MEX_FLAGS) $(USER_INCLUDES) $<

.cpp.obj :
	@cmd /C "echo ### Compiling $<"
	@if exist $*.pdb del $*.pdb
	@if exist ..\$(MODEL)_sf.pdb del ..\$(MODEL)_sf.pdb
	$(CPP) $(MEX_FLAGS) $(USER_INCLUDES) $<

$(FMI_OBJ) : 
    @cmd /C "echo ###"
    @cmd /C "echo ### Compiling FMI wrapper: " $(FMI_SRC)
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_ROOT_SFCN_DEFINES) "$(FMI_SRC)"
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_ROOT_SFCN_DEFINES) "$(FMI_SRC2)"
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_ROOT_SFCN_DEFINES) "$(FMI_SRC3)"
    @cmd /C "echo ### Compiling fixed-step solver: " $(FMI_SOLVER_SRC)
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_SOLVER_DEFINES) /I"$(FMI_SOLVER_INCLUDE)" "$(FMI_SOLVER_SRC)"
!if "$(FMI_TYPE)" == "CoSimulation"
!if "$(SOLVER)" == "ode14x.c"
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_SOLVER_DEFINES) /I"$(FMI_SOLVER_INCLUDE)" "$(MATLAB_ROOT)\rtw\c\src\matrixmath\rt_backsubrr_dbl.c"
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_SOLVER_DEFINES) /I"$(FMI_SOLVER_INCLUDE)" "$(MATLAB_ROOT)\rtw\c\src\matrixmath\rt_forwardsubrr_dbl.c"
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_SOLVER_DEFINES) /I"$(FMI_SOLVER_INCLUDE)" "$(MATLAB_ROOT)\rtw\c\src\matrixmath\rt_lu_real.c"
!endif
!endif
!if "$(FMI_SFCN_SRCS)" != ""
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_CHILD_SFCN_DEFINES) "$(MATLAB_ROOT)\rtw\c\src\rt_matrx.c"
!endif
    
{..}.c.dum :
    @cmd /C "echo ### Compiling $<"
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_CHILD_SFCN_DEFINES) $<

{..}.cpp.dum :
    @cmd /C "echo ### Compiling $<"
    $(FMI_CC) $(FMI_CC_FLAGS) $(FMI_CHILD_SFCN_DEFINES) $<

set_environment_variables:
	@set INCLUDE=$(INCLUDE)
	@set LIB=$(LIB)
	@set MATLAB=$(MATLAB_ROOT)

# Libraries

|>START_EXPAND_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = \
|>START_EXPAND_MODULES<|    |>EXPAND_MODULE_NAME<|.obj \
|>END_EXPAND_MODULES<|

|>EXPAND_LIBRARY_NAME<|.lib : rtw_proj.tmw $(MAKEFILE) $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@cmd /C "echo ### Creating $@"
	$(LIBCMD) /nologo /out:$@ $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@cmd /C "echo ### Created $@"

|>END_EXPAND_LIBRARIES<|

|>START_PRECOMP_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = \
|>START_EXPAND_MODULES<|    |>EXPAND_MODULE_NAME<|.obj \
|>END_EXPAND_MODULES<|

|>EXPAND_LIBRARY_NAME<|.lib : rtw_proj.tmw $(MAKEFILE) $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@cmd /C "echo ### Creating $@"
	$(LIBCMD) /nologo /out:$@ $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@cmd /C "echo ### Created $@"

|>END_PRECOMP_LIBRARIES<|

#----------------------------- Dependencies -----------------------------------

$(OBJS) : $(MAKEFILE) rtw_proj.tmw

